// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zeemlin.Data.DbContexts;

#nullable disable

namespace Zeemlin.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240320185923_SchoolLessonAttendanceMigration")]
    partial class SchoolLessonAttendanceMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.HomeworkAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkId");

                    b.ToTable("HomeworkAssets", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.SchoolAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolAssets", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.TeacherAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherAssets", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1183),
                            Description = "A comprehensive course covering all aspects of the English language.",
                            Name = "English Language Course",
                            SchoolId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48651
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1186),
                            Description = "A course focusing on various aspects of computer science and programming.",
                            Name = "Computer Science Course",
                            SchoolId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 74586
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1188),
                            Description = "A course covering photography techniques, equipment, and artistic aspects.",
                            Name = "Photography Course",
                            SchoolId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48651
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1189),
                            Description = "A comprehensive course covering various mathematical concepts and techniques.",
                            Name = "Mathematics Course",
                            SchoolId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48651
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1191),
                            Description = "A course exploring the history and development of art from different periods and cultures.",
                            Name = "Art History Course",
                            SchoolId = 4L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 54861
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1193),
                            Description = "A course covering fundamental principles of physics and their practical applications.",
                            Name = "Physics Course",
                            SchoolId = 5L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48651
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1194),
                            Description = "A course exploring music theory, notation, composition, and performance.",
                            Name = "Music Theory Course",
                            SchoolId = 6L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 10000
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1196),
                            Description = "A course covering the principles of chemistry, including atomic structure, chemical reactions, and bonding.",
                            Name = "Chemistry Course",
                            SchoolId = 7L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 10000
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1197),
                            Description = "A course studying the Earth's landscapes, environments, and human geography.",
                            Name = "Geography Course",
                            SchoolId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 153889
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1199),
                            Description = "A course focusing on the French language, covering vocabulary, grammar, and conversation.",
                            Name = "French Language Course",
                            SchoolId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 485325
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1200),
                            Description = "A course covering algebraic concepts and techniques, including equations, functions, and polynomials.",
                            Name = "Algebra Course",
                            SchoolId = 10L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 489615
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1201),
                            Description = "A course exploring the principles of biology, including cell biology, genetics, and ecology.",
                            Name = "Biology Course",
                            SchoolId = 11L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 98465
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1202),
                            Description = "A course focusing on the Russian language, covering vocabulary, grammar, and conversation.",
                            Name = "Russian Language Course",
                            SchoolId = 12L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 84650
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1204),
                            Description = "A course exploring classic and contemporary works of English literature.",
                            Name = "English Literature Course",
                            SchoolId = 13L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 10000
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1205),
                            Description = "A course examining the history and development of art from different cultures and periods.",
                            Name = "History of Art Course",
                            SchoolId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 10000
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1206),
                            Description = "A course covering fundamental concepts of computer science, programming, and algorithms.",
                            Name = "Computer Science Course",
                            SchoolId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 10000
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1207),
                            Description = "A course studying the Earth's structure, rocks, minerals, and geological processes.",
                            Name = "Geology Course",
                            SchoolId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 78245
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1209),
                            Description = "A course focusing on IT concepts, including hardware, software, networks, and cybersecurity.",
                            Name = "Information Technology Course",
                            SchoolId = 4L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 40978
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1210),
                            Description = "A course covering principles and techniques of chemical engineering, including unit operations and process design.",
                            Name = "Chemical Engineering Course",
                            SchoolId = 5L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48740
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1211),
                            Description = "A course focusing on physical fitness, sports, and exercise physiology.",
                            Name = "Physical Education Course",
                            SchoolId = 6L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 48658
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1213),
                            Description = "A course exploring advanced concepts in algebraic geometry, including varieties and schemes.",
                            Name = "Algebraic Geometry Course",
                            SchoolId = 7L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 755407
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1214),
                            Description = "A course studying the Earth's environment, ecosystems, and human impact on nature.",
                            Name = "Environmental Science Course",
                            SchoolId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 4150
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1215),
                            Description = "A course exploring the art and techniques of French cuisine, including cooking methods and recipes.",
                            Name = "French Cuisine Course",
                            SchoolId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 4568
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1216),
                            Description = "A course exploring the art and techniques of French cuisine, including cooking methods and recipes.",
                            Name = "Course",
                            SchoolId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 86000
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1217),
                            Description = "A course exploring the art and techniques of French cuisine, including cooking methods and recipes.",
                            Name = "Course",
                            SchoolId = 10L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 1000
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AssessmentType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("Grades", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1279),
                            Description = "A group for beginner English language learners.",
                            Name = "Beginner English Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1282),
                            Description = "A group focusing on Java programming language and application development.",
                            Name = "Java Programming Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1284),
                            Description = "A group for beginners learning basic photography techniques.",
                            Name = "Basic Photography Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1285),
                            Description = "A group for intermediate level mathematics students.",
                            Name = "Intermediate Mathematics Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1286),
                            Description = "A group studying Renaissance art and its influences.",
                            Name = "Renaissance Art Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1288),
                            Description = "A group focusing on advanced topics in physics and theoretical physics.",
                            Name = "Advanced Physics Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1289),
                            Description = "A group focusing on learning to play musical instruments and ensemble performance.",
                            Name = "Instrumental Music Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1291),
                            Description = "A group studying organic chemistry and its applications in industry and research.",
                            Name = "Organic Chemistry Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1292),
                            Description = "A group exploring environmental issues and sustainability.",
                            Name = "Environmental Studies Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1294),
                            Description = "A group for intermediate French language learners.",
                            Name = "Intermediate French Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1328),
                            Description = "A group focusing on advanced algebraic concepts and problem-solving techniques.",
                            Name = "Advanced Algebra Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1329),
                            Description = "A group studying the cellular structure, function, and processes.",
                            Name = "Cell Biology Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1330),
                            Description = "A group focusing on practicing conversational Russian language skills.",
                            Name = "Russian Language Conversation Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            CourseId = 14L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1332),
                            Description = "A group studying the works of William Shakespeare and Elizabethan literature.",
                            Name = "Shakespearean Literature Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            CourseId = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1333),
                            Description = "A group exploring ancient civilizations, cultures, and historical events.",
                            Name = "Ancient History Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            CourseId = 16L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1334),
                            Description = "A group focusing on advanced algorithms and problem-solving strategies.",
                            Name = "Advanced Algorithms Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            CourseId = 17L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1335),
                            Description = "A group studying volcanoes, volcanic processes, and volcanic hazards.",
                            Name = "Volcanology Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            CourseId = 18L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1337),
                            Description = "A group focusing on network security principles, protocols, and practices.",
                            Name = "Network Security Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19L,
                            CourseId = 19L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1338),
                            Description = "A group studying chemical engineering process design and optimization.",
                            Name = "Process Design Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20L,
                            CourseId = 20L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1339),
                            Description = "A group focusing on team sports and cooperative gameplay.",
                            Name = "Team Sports Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21L,
                            CourseId = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1342),
                            Description = "A group studying abstract algebraic structures and their properties.",
                            Name = "Abstract Algebra Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22L,
                            CourseId = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1343),
                            Description = "A group focusing on the study of genes, heredity, and genetic variation.",
                            Name = "Genetics Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23L,
                            CourseId = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1344),
                            Description = "A group for advanced learners focusing on complex aspects of Russian language and literature.",
                            Name = "Advanced Russian Language Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24L,
                            CourseId = 14L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1346),
                            Description = "A group studying modern literary works and contemporary authors.",
                            Name = "Modern Literature Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25L,
                            CourseId = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1347),
                            Description = "A group focusing on art and artists from the Renaissance period.",
                            Name = "Renaissance Art Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26L,
                            CourseId = 16L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1348),
                            Description = "A group studying machine learning algorithms and applications.",
                            Name = "Machine Learning Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27L,
                            CourseId = 17L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1349),
                            Description = "A group studying fossils, ancient life forms, and prehistoric ecosystems.",
                            Name = "Paleontology Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28L,
                            CourseId = 18L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1350),
                            Description = "A group focusing on cybersecurity practices, threats, and defenses.",
                            Name = "Cybersecurity Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29L,
                            CourseId = 19L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1351),
                            Description = "A group studying optimization techniques for chemical processes.",
                            Name = "Chemical Process Optimization Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30L,
                            CourseId = 20L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1352),
                            Description = "A group focusing on yoga, meditation, and mindfulness practices.",
                            Name = "Yoga and Meditation Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31L,
                            CourseId = 21L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1353),
                            Description = "A group focusing on yoga, meditation, and mindfulness practices.",
                            Name = "Yoga and Meditation Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32L,
                            CourseId = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1354),
                            Description = "A group focusing on yoga, meditation, and mindfulness practices.",
                            Name = "Yoga and Meditation Group",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Homework", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deadline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Homeworks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1464),
                            Deadline = "23:59:59",
                            Description = "Complete the exercises on basic English grammar concepts covered in the lesson.",
                            LessonId = 1L,
                            Title = "Practice Exercise 1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1468),
                            Deadline = "23:59:59",
                            Description = "Write a short paragraph applying the grammar rules discussed in class.",
                            LessonId = 1L,
                            Title = "Writing Assignment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1470),
                            Deadline = "23:59:59",
                            Description = "Write a Java program that demonstrates the use of variables and different data types.",
                            LessonId = 2L,
                            Title = "Code Exercise: Variables and Data Types",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1471),
                            Deadline = "23:59:59",
                            Description = "Solve the programming problems provided and submit your solutions.",
                            LessonId = 2L,
                            Title = "Problem-solving Exercise",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1472),
                            Deadline = "23:59:59",
                            Description = "Take photographs applying the composition techniques discussed in class.",
                            LessonId = 3L,
                            Title = "Photo Composition Project",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1474),
                            Deadline = "23:59:59",
                            Description = "Edit the provided photographs using editing software and submit your edited versions.",
                            LessonId = 3L,
                            Title = "Editing Exercise",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1475),
                            Deadline = "23:59:59",
                            Description = "Solve the algebraic problems provided and submit your solutions.",
                            LessonId = 4L,
                            Title = "Problem-solving Assignment",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1476),
                            Deadline = "23:59:59",
                            Description = "Practice solving algebraic equations of different types.",
                            LessonId = 4L,
                            Title = "Algebraic Equations Exercise",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1478),
                            Deadline = "23:59:59",
                            Description = "Analyze a Renaissance artwork of your choice and write an essay.",
                            LessonId = 5L,
                            Title = "Art Analysis Project",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1479),
                            Deadline = "23:59:59",
                            Description = "Reproduce a famous Renaissance artwork using your preferred medium.",
                            LessonId = 5L,
                            Title = "Artwork Reproduction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1481),
                            Deadline = "23:59:59",
                            Description = "Reproduce a famous Renaissance artwork using your preferred medium.",
                            LessonId = 8L,
                            Title = "Artwork Reproduction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1482),
                            Deadline = "23:59:59",
                            Description = "Reproduce a famous Renaissance artwork using your preferred medium.",
                            LessonId = 8L,
                            Title = "Artwork Reproduction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1400),
                            Description = "An introductory lesson covering basic English grammar concepts.",
                            EndDate = "10:00",
                            GroupId = 1L,
                            StartDate = "9:00",
                            TeacherId = 1L,
                            Title = "Introduction to English Grammar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1404),
                            Description = "A beginner-level lesson introducing fundamental Java programming concepts.",
                            EndDate = "10:00",
                            GroupId = 2L,
                            StartDate = "9:00",
                            TeacherId = 2L,
                            Title = "Introduction to Java Programming",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1406),
                            Description = "An introductory lesson covering basic photography techniques and principles.",
                            EndDate = "10:00",
                            GroupId = 3L,
                            StartDate = "9:00",
                            TeacherId = 3L,
                            Title = "Introduction to Photography",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1407),
                            Description = "A lesson focusing on intermediate-level algebraic concepts and problem-solving techniques.",
                            EndDate = "10:00",
                            GroupId = 4L,
                            StartDate = "9:00",
                            TeacherId = 4L,
                            Title = "Intermediate Mathematics: Algebra",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1409),
                            Description = "A lesson introducing Renaissance art and its historical significance.",
                            EndDate = "10:00",
                            GroupId = 5L,
                            StartDate = "9:00",
                            TeacherId = 5L,
                            Title = "Renaissance Art: Introduction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1410),
                            Description = "An advanced lesson covering quantum mechanics and its applications.",
                            EndDate = "10:00",
                            GroupId = 6L,
                            StartDate = "9:00",
                            TeacherId = 6L,
                            Title = "Advanced Physics: Quantum Mechanics",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1412),
                            Description = "A beginner-level lesson introducing piano playing techniques and music theory.",
                            EndDate = "10:00",
                            GroupId = 7L,
                            StartDate = "9:00",
                            TeacherId = 7L,
                            Title = "Instrumental Music: Introduction to Piano",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1413),
                            Description = "An introductory lesson covering basic organic chemistry principles and reactions.",
                            EndDate = "10:00",
                            GroupId = 8L,
                            StartDate = "9:00",
                            TeacherId = 8L,
                            Title = "Organic Chemistry: Introduction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1415),
                            Description = "A lesson exploring ancient civilizations and their contributions to world history.",
                            EndDate = "10:00",
                            GroupId = 9L,
                            StartDate = "9:00",
                            TeacherId = 9L,
                            Title = "World History: Ancient Civilizations",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1418),
                            Description = "An introductory lesson covering basic graphic design principles and software tools.",
                            EndDate = "10:00",
                            GroupId = 10L,
                            StartDate = "9:00",
                            TeacherId = 10L,
                            Title = "Introduction to Graphic Design",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1419),
                            Description = "A beginner-level lesson introducing basic web development concepts and technologies.",
                            EndDate = "10:00",
                            GroupId = 11L,
                            StartDate = "9:00",
                            TeacherId = 11L,
                            Title = "Introduction to Web Development",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1420),
                            Description = "A beginner-level lesson introducing basic web development concepts and technologies.",
                            EndDate = "10:00",
                            GroupId = 12L,
                            StartDate = "9:00",
                            TeacherId = 12L,
                            Title = "Introduction to Web Development",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1422),
                            Description = "A beginner-level lesson introducing basic web development concepts and technologies.",
                            EndDate = "10:00",
                            GroupId = 13L,
                            StartDate = "9:00",
                            TeacherId = 13L,
                            Title = "Introduction to Web Development",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.LessonAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LessonAttendanceType")
                        .HasColumnType("integer");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("StudentId");

                    b.ToTable("LessonAttendances", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.LessonTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("GetDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("LessonsTable");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Parent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GeneralAddressMFY")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("HouseNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Difficulty")
                        .HasColumnType("smallint");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Questiones");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CallCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<long>("DirectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EmailCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GeneralAddressMFY")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.Property<long>("SchoolNumber")
                        .HasColumnType("bigint");

                    b.Property<byte>("SchoolType")
                        .HasColumnType("smallint");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long?>("SuperAdminId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("SuperAdminId");

                    b.ToTable("Schools", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CallCenter = "+998900000001",
                            Country = "O'zbekiston",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1082),
                            Description = "Xalqaro standartlarga asoslangan innovatsion ta'lim muassasasi",
                            DirectorId = 1L,
                            DistrictName = "Mirzo Ulug'bek",
                            EmailCenter = "TXM@school.com",
                            GeneralAddressMFY = "Uch Qahramon MFY",
                            Name = "Inter-Nation",
                            Region = 2,
                            SchoolNumber = 12345L,
                            SchoolType = (byte)0,
                            StreetName = "Bog'ishamol ko'chasi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "TXM.com"
                        },
                        new
                        {
                            Id = 2L,
                            CallCenter = "+998900000002",
                            Country = "O'zbekiston",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1090),
                            Description = "Ingliz olami",
                            DirectorId = 2L,
                            DistrictName = "Eskishahar",
                            EmailCenter = "STI@school.com",
                            GeneralAddressMFY = "Xo'ja Ahror Vali MFY",
                            Name = "Cambridge Edu",
                            Region = 11,
                            SchoolNumber = 54321L,
                            SchoolType = (byte)3,
                            StreetName = "Registon ko'chasi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "STI.com"
                        },
                        new
                        {
                            Id = 3L,
                            CallCenter = "+998900000003",
                            Country = "O'zbekiston",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1094),
                            Description = "Pedagogika sohasida yuqori malakali mutaxassislar tayyorlaydigan oliy ta'lim muassasasi",
                            DirectorId = 3L,
                            DistrictName = "Shahriston",
                            EmailCenter = "API@school.com",
                            GeneralAddressMFY = "Pedagogika instituti",
                            Name = "Andijon Pedagogika Instituti",
                            Region = 3,
                            SchoolNumber = 67890L,
                            SchoolType = (byte)0,
                            StreetName = "Pedagogika ko'chasi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "API.com"
                        },
                        new
                        {
                            Id = 4L,
                            CallCenter = "+998900000004",
                            Country = "O'zbekiston",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1096),
                            Description = "Oliy ta'lim sohasida yuqori malakali mutaxassislar tayyorlaydigan davlat universiteti",
                            DirectorId = 4L,
                            DistrictName = "Namangan shahri",
                            EmailCenter = "NDU@school.com",
                            GeneralAddressMFY = "Universitet",
                            Name = "Namangan Davlat Universiteti",
                            Region = 4,
                            SchoolNumber = 98765L,
                            SchoolType = (byte)3,
                            StreetName = "Universitet ko'chasi",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "NDU.com"
                        },
                        new
                        {
                            Id = 5L,
                            CallCenter = "+998900000013",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1098),
                            Description = "Center providing language training services.",
                            DirectorId = 3L,
                            DistrictName = "Yunusabad",
                            EmailCenter = "info@tltraining.com",
                            GeneralAddressMFY = "Language Training Center",
                            Name = "Tashkent Language Training Center",
                            Region = 1,
                            SchoolNumber = 13579L,
                            SchoolType = (byte)3,
                            StreetName = "Language Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://tltraining.com"
                        },
                        new
                        {
                            Id = 6L,
                            CallCenter = "+998900000014",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1101),
                            Description = "Center offering computer training courses.",
                            DirectorId = 4L,
                            DistrictName = "Samarqand shahri",
                            EmailCenter = "info@sctc.uz",
                            GeneralAddressMFY = "Computer Training Center",
                            Name = "Samarkand Computer Training Center",
                            Region = 11,
                            SchoolNumber = 24680L,
                            SchoolType = (byte)3,
                            StreetName = "Computer Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://sctc.uz"
                        },
                        new
                        {
                            Id = 7L,
                            CallCenter = "+998900000015",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1103),
                            Description = "Fitness center offering various training programs.",
                            DirectorId = 1L,
                            DistrictName = "Navoiy shahri",
                            EmailCenter = "info@navfit.com",
                            GeneralAddressMFY = "Fitness Training Center",
                            Name = "Navoiy Fitness Training Center",
                            Region = 9,
                            SchoolNumber = 35791L,
                            SchoolType = (byte)3,
                            StreetName = "Fitness Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://navfit.com"
                        },
                        new
                        {
                            Id = 8L,
                            CallCenter = "+998900000016",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1105),
                            Description = "Center specializing in photography training.",
                            DirectorId = 2L,
                            DistrictName = "Termiz shahri",
                            EmailCenter = "info@sptc.uz",
                            GeneralAddressMFY = "Photography Training Center",
                            Name = "Surxondaryo Photography Training Center",
                            Region = 12,
                            SchoolNumber = 46802L,
                            SchoolType = (byte)3,
                            StreetName = "Photography Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://sptc.uz"
                        },
                        new
                        {
                            Id = 9L,
                            CallCenter = "+998900000017",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1107),
                            Description = "Center providing language training services.",
                            DirectorId = 3L,
                            DistrictName = "Yunusabad",
                            EmailCenter = "info@tltraining.com",
                            GeneralAddressMFY = "Yunusabad MFY",
                            Name = "Tashkent Language Training Center",
                            Region = 1,
                            SchoolNumber = 13579L,
                            SchoolType = (byte)3,
                            StreetName = "Mustaqillik Avenue",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://tltraining.com"
                        },
                        new
                        {
                            Id = 10L,
                            CallCenter = "+998900000018",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1109),
                            Description = "Center offering computer training courses.",
                            DirectorId = 4L,
                            DistrictName = "Samarqand shahri",
                            EmailCenter = "info@sctc.uz",
                            GeneralAddressMFY = "Samarqand MFY",
                            Name = "Samarkand Computer Training Center",
                            Region = 11,
                            SchoolNumber = 24680L,
                            SchoolType = (byte)2,
                            StreetName = "Amir Temur Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://sctc.uz"
                        },
                        new
                        {
                            Id = 11L,
                            CallCenter = "+998900000019",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1111),
                            Description = "Fitness center offering various training programs.",
                            DirectorId = 1L,
                            DistrictName = "Navoiy shahri",
                            EmailCenter = "info@navfit.com",
                            GeneralAddressMFY = "Navoiy MFY",
                            Name = "Navoiy Fitness Training Center",
                            Region = 9,
                            SchoolNumber = 35791L,
                            SchoolType = (byte)1,
                            StreetName = "Olmazor Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://navfit.com"
                        },
                        new
                        {
                            Id = 12L,
                            CallCenter = "+998900000020",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1113),
                            Description = "Center specializing in photography training.",
                            DirectorId = 5L,
                            DistrictName = "Termiz shahri",
                            EmailCenter = "info@sptc.uz",
                            GeneralAddressMFY = "Termiz MFY",
                            Name = "Surxondaryo Photography Training Center",
                            Region = 12,
                            SchoolNumber = 46802L,
                            SchoolType = (byte)0,
                            StreetName = "Shaxrisabz Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://sptc.uz"
                        },
                        new
                        {
                            Id = 13L,
                            CallCenter = "+998900000021",
                            Country = "Uzbekistan",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1114),
                            Description = "Center specializing in photography training.",
                            DirectorId = 5L,
                            DistrictName = "Termiz shahri",
                            EmailCenter = "info@sptc.uz",
                            GeneralAddressMFY = "Termiz MFY",
                            Name = "Surxondaryo Photography Training Center",
                            Region = 12,
                            SchoolNumber = 4680L,
                            SchoolType = (byte)0,
                            StreetName = "Shaxrisabz Street",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "https://sptc.uz"
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("GeneralAddressMFY")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("HouseNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("StudentUniqueId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("genderType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.StudentGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentGroups", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SchoolNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("ScienceType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("genderType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Biography = "Experienced teacher in mathematics.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7275),
                            DateOfBirth = "1985.5.15",
                            DistrictName = "Mirzo Ulug'bek",
                            Email = "johnsmith@school.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000001",
                            SchoolNumber = 12345L,
                            ScienceType = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 2L,
                            Biography = "Passionate teacher specializing in history.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7282),
                            DateOfBirth = "1988.8.25",
                            DistrictName = "Mirzo Ulug'bek",
                            Email = "janedoe@school.com",
                            FirstName = "Jane",
                            LastName = "Doe",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000002",
                            SchoolNumber = 12345L,
                            ScienceType = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 3L,
                            Biography = "Dedicated teacher with expertise in geography.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7285),
                            DateOfBirth = "1980.1.10",
                            DistrictName = "Eskishahar",
                            Email = "michaeljohnson@school.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000003",
                            SchoolNumber = 54321L,
                            ScienceType = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 4L,
                            Biography = "Experienced Mathematics teacher with 10+ years of experience.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7287),
                            DateOfBirth = "1980.1.1",
                            DistrictName = "Mirzo Ulug'bek",
                            Email = "umid.yoldoshev@school1.com",
                            FirstName = "Umid",
                            LastName = "Yo'ldoshev",
                            Password = "hashed_password",
                            PhoneNumber = "+998901234567",
                            SchoolNumber = 12345L,
                            ScienceType = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 5L,
                            Biography = "Enthusiastic English language teacher with a passion for fostering communication skills.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7290),
                            DateOfBirth = "1985.5.15",
                            DistrictName = "Eskishahar",
                            Email = "nodira.xojayeva@school2.com",
                            FirstName = "Nodira",
                            LastName = "Xo'jayeva",
                            Password = "hashed_password",
                            PhoneNumber = "+998907890123",
                            SchoolNumber = 54321L,
                            ScienceType = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 6L,
                            Biography = "Experienced teacher specializing in chemistry.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7293),
                            DateOfBirth = "1984.5.9",
                            DistrictName = "Mirzo Ulug'bek",
                            Email = "emilywilson@school.com",
                            FirstName = "Emily",
                            LastName = "Wilson",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000006",
                            SchoolNumber = 12345L,
                            ScienceType = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 7L,
                            Biography = "Passionate teacher with expertise in art.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7295),
                            DateOfBirth = "2000.9.4",
                            DistrictName = "Mirzo Ulug'bek",
                            Email = "daniellee@school.com",
                            FirstName = "Daniel",
                            LastName = "Lee",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000007",
                            SchoolNumber = 12345L,
                            ScienceType = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 8L,
                            Biography = "Dedicated teacher with a passion for music.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7297),
                            DateOfBirth = "1986.7.5",
                            DistrictName = "Eskishahar",
                            Email = "avagarcia@school.com",
                            FirstName = "Ava",
                            LastName = "Garcia",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000008",
                            SchoolNumber = 54321L,
                            ScienceType = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 9L,
                            Biography = "Experienced mathematics teacher.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7298),
                            DateOfBirth = "1984.3.19",
                            DistrictName = "Eskishahar",
                            Email = "noahmartinez@school.com",
                            FirstName = "Noah",
                            LastName = "Martinez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000009",
                            SchoolNumber = 54321L,
                            ScienceType = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 10L,
                            Biography = "Passionate teacher specializing in biology.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7301),
                            DateOfBirth = "1989.9.30",
                            DistrictName = "Shahriston",
                            Email = "ellalopez@school.com",
                            FirstName = "Ella",
                            LastName = "Lopez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000010",
                            SchoolNumber = 67890L,
                            ScienceType = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 11L,
                            Biography = "Experienced history teacher.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7303),
                            DateOfBirth = "1981.12.10",
                            DistrictName = "Shahriston",
                            Email = "williamtaylor@school.com",
                            FirstName = "William",
                            LastName = "Taylor",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000011",
                            SchoolNumber = 67890L,
                            ScienceType = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 12L,
                            Biography = "Dedicated teacher with expertise in physics.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7304),
                            DateOfBirth = "1992.11.12",
                            DistrictName = "Namangan shahri",
                            Email = "sofiahernandez@school.com",
                            FirstName = "Sofia",
                            LastName = "Hernandez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000012",
                            SchoolNumber = 98765L,
                            ScienceType = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 13L,
                            Biography = "Passionate teacher specializing in algebra.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7306),
                            DateOfBirth = "1982.12.17",
                            DistrictName = "Namangan shahri",
                            Email = "oliverscott@school.com",
                            FirstName = "Oliver",
                            LastName = "Scott",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000013",
                            SchoolNumber = 98765L,
                            ScienceType = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 14L,
                            Biography = "Dedicated History teacher with a strong emphasis on critical thinking skills.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7310),
                            DateOfBirth = "1996.2.25",
                            DistrictName = "Shahriston",
                            Email = "sarvar.qosimov@school3.com",
                            FirstName = "Sarvar",
                            LastName = "Qosimov",
                            Password = "hashed_password",
                            PhoneNumber = "+998909876543",
                            SchoolNumber = 67890L,
                            ScienceType = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 15L,
                            Biography = "Skilled Uzbek language teacher passionate about preserving cultural heritage.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7311),
                            DateOfBirth = "2000.2.29",
                            DistrictName = "Namangan shahri",
                            Email = "malika.azizova@school4.com",
                            FirstName = "Malika",
                            LastName = "Azizova",
                            Password = "hashed_password",
                            PhoneNumber = "+998901239876",
                            SchoolNumber = 98765L,
                            ScienceType = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 16L,
                            Biography = "Experienced teacher specializing in geography.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7313),
                            DateOfBirth = "1994.6.29",
                            DistrictName = "Namangan shahri",
                            Email = "emmaperez@school.com",
                            FirstName = "Emma",
                            LastName = "Perez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000016",
                            SchoolNumber = 98765L,
                            ScienceType = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 17L,
                            Biography = "Passionate teacher with expertise in biology.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7315),
                            DateOfBirth = "1992.8.16",
                            DistrictName = "Samarkand shahri",
                            Email = "lucasnguyen@school.com",
                            FirstName = "Lucas",
                            LastName = "Nguyen",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000017",
                            SchoolNumber = 24680L,
                            ScienceType = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 18L,
                            Biography = "Dedicated teacher with a passion for music.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7317),
                            DateOfBirth = "1993.10.4",
                            DistrictName = "Samarkand shahri",
                            Email = "lilygonzalez@school.com",
                            FirstName = "Lily",
                            LastName = "Gonzalez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000018",
                            SchoolNumber = 24680L,
                            ScienceType = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 19L,
                            Biography = "Experienced mathematics teacher.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7319),
                            DateOfBirth = "1993.10.4",
                            DistrictName = "Yunusabad",
                            Email = "jacksonadams@school.com",
                            FirstName = "Jackson",
                            LastName = "Adams",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000019",
                            SchoolNumber = 13579L,
                            ScienceType = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 20L,
                            Biography = "Passionate teacher specializing in physics.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7321),
                            DateOfBirth = "1998.10.16",
                            DistrictName = "Yunusabad",
                            Email = "chloekim@school.com",
                            FirstName = "Chloe",
                            LastName = "Kim",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000020",
                            SchoolNumber = 13579L,
                            ScienceType = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 21L,
                            Biography = "Experienced teacher with expertise in chemistry.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7322),
                            DateOfBirth = "1990.7.14",
                            DistrictName = "Navoiy shahri",
                            Email = "ryanharris@school.com",
                            FirstName = "Ryan",
                            LastName = "Harris",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000021",
                            SchoolNumber = 35791L,
                            ScienceType = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 22L,
                            Biography = "Passionate teacher specializing in algebra.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7324),
                            DateOfBirth = "1989.10.13",
                            DistrictName = "Navoiy shahri",
                            Email = "madisonlopez@school.com",
                            FirstName = "Madison",
                            LastName = "Lopez",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000022",
                            SchoolNumber = 35791L,
                            ScienceType = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 23L,
                            Biography = "Dedicated teacher with a passion for art.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7326),
                            DateOfBirth = "1997.1.1",
                            DistrictName = "Termiz shahri",
                            Email = "ethanwright@school.com",
                            FirstName = "Ethan",
                            LastName = "Wright",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000023",
                            SchoolNumber = 46802L,
                            ScienceType = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)1
                        },
                        new
                        {
                            Id = 24L,
                            Biography = "Experienced teacher specializing in history.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7327),
                            DateOfBirth = "1991.11.10",
                            DistrictName = "Termiz shahri",
                            Email = "averymartin@school.com",
                            FirstName = "Avery",
                            LastName = "Martin",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000024",
                            SchoolNumber = 46802L,
                            ScienceType = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        },
                        new
                        {
                            Id = 25L,
                            Biography = "Passionate teacher specializing in information technology.",
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7329),
                            DateOfBirth = "1993.10.4",
                            DistrictName = "Termiz shahri",
                            Email = "harperthompson@school.com",
                            FirstName = "Harper",
                            LastName = "Thompson",
                            Password = "hashed_password",
                            PhoneNumber = "+998900000025",
                            SchoolNumber = 46802L,
                            ScienceType = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genderType = (byte)2
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.TeacherGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1538),
                            GroupId = 1L,
                            TeacherId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1541),
                            GroupId = 2L,
                            TeacherId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1542),
                            GroupId = 3L,
                            TeacherId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1543),
                            GroupId = 4L,
                            TeacherId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1545),
                            GroupId = 5L,
                            TeacherId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1547),
                            GroupId = 6L,
                            TeacherId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1548),
                            GroupId = 7L,
                            TeacherId = 4L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1549),
                            GroupId = 8L,
                            TeacherId = 5L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1550),
                            GroupId = 9L,
                            TeacherId = 6L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1552),
                            GroupId = 10L,
                            TeacherId = 7L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1553),
                            GroupId = 11L,
                            TeacherId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1554),
                            GroupId = 12L,
                            TeacherId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1555),
                            GroupId = 13L,
                            TeacherId = 10L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1556),
                            GroupId = 14L,
                            TeacherId = 11L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1557),
                            GroupId = 15L,
                            TeacherId = 12L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1558),
                            GroupId = 16L,
                            TeacherId = 13L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1559),
                            GroupId = 17L,
                            TeacherId = 14L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1561),
                            GroupId = 18L,
                            TeacherId = 15L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1594),
                            GroupId = 19L,
                            TeacherId = 16L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1595),
                            GroupId = 20L,
                            TeacherId = 17L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1596),
                            GroupId = 21L,
                            TeacherId = 18L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1597),
                            GroupId = 22L,
                            TeacherId = 19L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1598),
                            GroupId = 23L,
                            TeacherId = 20L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1599),
                            GroupId = 24L,
                            TeacherId = 21L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 603, DateTimeKind.Utc).AddTicks(1600),
                            GroupId = 25L,
                            TeacherId = 22L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassportSeria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SuperAdminId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SuperAdminId");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6901),
                            Email = "johndoe@admin1.com",
                            FirstName = "John",
                            Gender = (byte)1,
                            LastName = "Doe",
                            PassportSeria = "AB123456",
                            Password = "hashed_password",
                            SchoolId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6906),
                            Email = "janesmith@admin2.com",
                            FirstName = "Jane",
                            Gender = (byte)2,
                            LastName = "Smith",
                            PassportSeria = "CD789012",
                            Password = "hashed_password",
                            SchoolId = 1L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school1"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6908),
                            Email = "michaeljohnson@admin1.com",
                            FirstName = "Michael",
                            Gender = (byte)1,
                            LastName = "Johnson",
                            PassportSeria = "EF345678",
                            Password = "hashed_password",
                            SchoolId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school2"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6910),
                            Email = "emmadavis@admin2.com",
                            FirstName = "Emma",
                            Gender = (byte)2,
                            LastName = "Davis",
                            PassportSeria = "GH901234",
                            Password = "hashed_password",
                            SchoolId = 2L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school2"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6911),
                            Email = "williambrown@admin1.com",
                            FirstName = "William",
                            Gender = (byte)1,
                            LastName = "Brown",
                            PassportSeria = "IJ567890",
                            Password = "hashed_password",
                            SchoolId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school3"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6914),
                            Email = "oliviataylor@admin2.com",
                            FirstName = "Olivia",
                            Gender = (byte)2,
                            LastName = "Taylor",
                            PassportSeria = "KL123456",
                            Password = "hashed_password",
                            SchoolId = 3L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school3"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6916),
                            Email = "davidwilson@admin1.com",
                            FirstName = "David",
                            Gender = (byte)1,
                            LastName = "Wilson",
                            PassportSeria = "MN789012",
                            Password = "hashed_password",
                            SchoolId = 4L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school4"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6917),
                            Email = "sophiamartinez@admin2.com",
                            FirstName = "Sophia",
                            Gender = (byte)2,
                            LastName = "Martinez",
                            PassportSeria = "OP345678",
                            Password = "hashed_password",
                            SchoolId = 4L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school4"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6919),
                            Email = "jamesanderson@admin1.com",
                            FirstName = "James",
                            Gender = (byte)1,
                            LastName = "Anderson",
                            PassportSeria = "QR901234",
                            Password = "hashed_password",
                            SchoolId = 5L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school5"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6921),
                            Email = "avahernandez@admin2.com",
                            FirstName = "Ava",
                            Gender = (byte)2,
                            LastName = "Hernandez",
                            PassportSeria = "ST567890",
                            Password = "hashed_password",
                            SchoolId = 5L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school5"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7003),
                            Email = "benjaminyoung@admin1.com",
                            FirstName = "Benjamin",
                            Gender = (byte)1,
                            LastName = "Young",
                            PassportSeria = "UV123456",
                            Password = "hashed_password",
                            SchoolId = 6L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school6"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7005),
                            Email = "mialopez@admin2.com",
                            FirstName = "Mia",
                            Gender = (byte)2,
                            LastName = "Lopez",
                            PassportSeria = "WX789012",
                            Password = "hashed_password",
                            SchoolId = 6L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school6"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7006),
                            Email = "danielgonzalez@admin1.com",
                            FirstName = "Daniel",
                            Gender = (byte)1,
                            LastName = "Gonzalez",
                            PassportSeria = "YZ345678",
                            Password = "hashed_password",
                            SchoolId = 7L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school7"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7008),
                            Email = "isabellaperez@admin2.com",
                            FirstName = "Isabella",
                            Gender = (byte)2,
                            LastName = "Perez",
                            PassportSeria = "AB901234",
                            Password = "hashed_password",
                            SchoolId = 7L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school7"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7009),
                            Email = "islom.karimov@admin1.com",
                            FirstName = "Islom",
                            Gender = (byte)1,
                            LastName = "Karimov",
                            PassportSeria = "MN567890",
                            Password = "hashed_password",
                            SchoolId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school4"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7052),
                            Email = "noziman.yoldosheva@admin2.com",
                            FirstName = "Nozima",
                            Gender = (byte)2,
                            LastName = "Yo'ldosheva",
                            PassportSeria = "OP123456",
                            Password = "hashed_password",
                            SchoolId = 8L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school4"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7054),
                            Email = "ethanmoore@admin1.com",
                            FirstName = "Ethan",
                            Gender = (byte)1,
                            LastName = "Moore",
                            PassportSeria = "CD901234",
                            Password = "hashed_password",
                            SchoolId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school9"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7057),
                            Email = "charlotterogers@admin2.com",
                            FirstName = "Charlotte",
                            Gender = (byte)2,
                            LastName = "Rogers",
                            PassportSeria = "EF567890",
                            Password = "hashed_password",
                            SchoolId = 9L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school9"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7059),
                            Email = "alexanderscott@admin1.com",
                            FirstName = "Alexander",
                            Gender = (byte)1,
                            LastName = "Scott",
                            PassportSeria = "GH123456",
                            Password = "hashed_password",
                            SchoolId = 10L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school10"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7060),
                            Email = "ameliagomez@admin2.com",
                            FirstName = "Amelia",
                            Gender = (byte)2,
                            LastName = "Gomez",
                            PassportSeria = "IJ789012",
                            Password = "hashed_password",
                            SchoolId = 10L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school10"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7062),
                            Email = "henrywright@admin1.com",
                            FirstName = "Henry",
                            Gender = (byte)1,
                            LastName = "Wright",
                            PassportSeria = "KL345678",
                            Password = "hashed_password",
                            SchoolId = 11L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school11"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7063),
                            Email = "sophieflores@admin2.com",
                            FirstName = "Sophie",
                            Gender = (byte)2,
                            LastName = "Flores",
                            PassportSeria = "MN901234",
                            Password = "hashed_password",
                            SchoolId = 11L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school11"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7065),
                            Email = "liamsanchez@admin1.com",
                            FirstName = "Liam",
                            Gender = (byte)1,
                            LastName = "Sanchez",
                            PassportSeria = "OP567890",
                            Password = "hashed_password",
                            SchoolId = 12L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin1_school12"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7066),
                            Email = "gracechang@admin2.com",
                            FirstName = "Grace",
                            Gender = (byte)2,
                            LastName = "Chang",
                            PassportSeria = "QR123456",
                            Password = "hashed_password",
                            SchoolId = 12L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin2_school12"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7068),
                            Email = "cmwp@admin2.com",
                            FirstName = "mps",
                            Gender = (byte)2,
                            LastName = "cmwp",
                            PassportSeria = "QR123456",
                            Password = "hashed_password",
                            SchoolId = 13L,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin3_school12"
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.Director", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassportSeria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Directors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7160),
                            Email = "olimjon.torayev@director.com",
                            FirstName = "Olimjon",
                            Gender = (byte)1,
                            LastName = "To'rayev",
                            PassportSeria = "AB123456",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7169),
                            Email = "nodira.xolmirzayeva@director.com",
                            FirstName = "Nodira",
                            Gender = (byte)2,
                            LastName = "Xolmirzayeva",
                            PassportSeria = "CD789012",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7173),
                            Email = "sarvar.qosimov@director.com",
                            FirstName = "Sarvar",
                            Gender = (byte)1,
                            LastName = "Qosimov",
                            PassportSeria = "EF345678",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7175),
                            Email = "malika.azizova@director.com",
                            FirstName = "Malika",
                            Gender = (byte)2,
                            LastName = "Azizova",
                            PassportSeria = "GH567890",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7177),
                            Email = "islom.karimov@director.com",
                            FirstName = "Islom",
                            Gender = (byte)1,
                            LastName = "Karimov",
                            PassportSeria = "IJ789012",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(7179),
                            Email = "ikcmwopv@director.com",
                            FirstName = "mcpw",
                            Gender = (byte)1,
                            LastName = "cmla",
                            PassportSeria = "IJ785212",
                            Password = "hashed_password",
                            PhoneNumber = "+998904567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "director5"
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.SuperAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassportSeria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SuperAdmins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6768),
                            Email = "shahnozaodilova@gmail.com",
                            FirstName = "Shahnoza",
                            Gender = (byte)2,
                            LastName = "Odilova",
                            PassportSeria = "AB123456",
                            Password = "hashed_password",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superadmin1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6797),
                            Email = "moxi05@gmail.com",
                            FirstName = "Moxinur",
                            Gender = (byte)2,
                            LastName = "Zokirova",
                            PassportSeria = "CD789012",
                            Password = "hashed_password",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superadmin2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6799),
                            Email = "akbarov@gmail.com",
                            FirstName = "Muhammadjon",
                            Gender = (byte)1,
                            LastName = "Akbarov",
                            PassportSeria = "AB123458",
                            Password = "hashed_password",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superadmin3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6801),
                            Email = "ruxshona0@gmail.com",
                            FirstName = "Ruxshona",
                            Gender = (byte)2,
                            LastName = "Nodirova",
                            PassportSeria = "CD789013",
                            Password = "hashed_password",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superadmin4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 3, 20, 18, 59, 22, 600, DateTimeKind.Utc).AddTicks(6803),
                            Email = "kimdir@gmail.com",
                            FirstName = "Kimdir",
                            Gender = (byte)2,
                            LastName = "Bilmiman",
                            PassportSeria = "CD789014",
                            Password = "hashed_password",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superadmin4"
                        });
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.HomeworkAsset", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Homework", "Homework")
                        .WithMany("Assets")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Homework");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.SchoolAsset", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Assets.TeacherAsset", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Course", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.School", "School")
                        .WithMany("Courses")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Grade", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Group", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Course", "Course")
                        .WithMany("Groups")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Homework", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Lesson", "Lesson")
                        .WithMany("Homework")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Lesson", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.LessonAttendance", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Student", "Student")
                        .WithMany("LessonAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.LessonTable", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Answer", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Questions.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Question", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Questions.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Questions")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Quiz", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.School", "School")
                        .WithMany("Quizzes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.School", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Users.Director", "Director")
                        .WithMany("Schools")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Users.SuperAdmin", null)
                        .WithMany("Schools")
                        .HasForeignKey("SuperAdminId");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.StudentGroup", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Group", "Group")
                        .WithMany("StudentGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Student", "Student")
                        .WithMany("StudentGroups")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Subject", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Lesson", "Lesson")
                        .WithMany("Subjects")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.TeacherGroup", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.Group", "Group")
                        .WithMany("TeacherGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Teacher", "Teacher")
                        .WithMany("TeacherGroups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.Admin", b =>
                {
                    b.HasOne("Zeemlin.Domain.Entities.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zeemlin.Domain.Entities.Users.SuperAdmin", null)
                        .WithMany("Admins")
                        .HasForeignKey("SuperAdminId");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Course", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Group", b =>
                {
                    b.Navigation("StudentGroups");

                    b.Navigation("TeacherGroups");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Homework", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Lesson", b =>
                {
                    b.Navigation("Homework");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Questions.Quiz", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.School", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Student", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("LessonAttendances");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Teacher", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("TeacherGroups");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.Director", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Zeemlin.Domain.Entities.Users.SuperAdmin", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Schools");
                });
#pragma warning restore 612, 618
        }
    }
}
